%% This BibTeX bibliography file was created using BibDesk.
%% http://bibdesk.sourceforge.net/


%% Created for Matteo Riondato at 2014-03-25 08:58:38 -0400 


%% Saved with string encoding Unicode (UTF-8) 



@article{Zaki99,
	Abstract = {The author surveys the state of the art in parallel and distributed association-rule-mining algorithms and uncovers the field's challenges and open research problems. This survey can serve as a reference for both researchers and practitioners},
	Author = {Zaki, Mohammed Javeed},
	Date-Added = {2012-01-11 09:47:36 +0100},
	Date-Modified = {2014-03-25 08:58:28 -0400},
	Doi = {10.1109/4434.806975},
	Issn = {1092-3063},
	Journal = {IEEE Concurrency},
	Keywords = {data mining;distributed association mining;parallel association mining;rule-mining algorithms;survey;data mining;distributed processing;parallel processing;},
	Month = oct # "\slash " # dec,
	Number = {4},
	Pages = {14--25},
	Title = {Parallel and distributed association mining: a survey},
	Volume = {7},
	Year = {1999},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/4434.806975}}

@inproceedings{MorettiSTC08,
	Abstract = {As the size of available datasets has grown from Megabytes to Gigabytes and now into Terabytes, machine learning algorithms and computing infrastructures have continuously evolved in an effort to keep pace. But at large scales, mining for useful patterns still presents challenges in terms of data management as well as computation. These issues can be addressed by dividing both data and computation to build ensembles of classifiers in a distributed fashion, but trade-offs in cost, performance, and accuracy must be considered when designing or selecting an appropriate architecture. In this paper, we present an abstraction for scalable data mining that allows us to explore these trade-offs. Data and computation are distributed to a computing cloud with minimal effort from the user, and multiple models for data management are available depending on the workload and system configuration. We demonstrate the performance and scalability characteristics of our ensembles using a wide variety of datasets and algorithms on a Condor-based pool with Chirp to handle the storage.},
	Author = {Moretti, Cristopher and Steinhaeuser, Karsten and Thain, Douglas and Chawla, Nitesh V.},
	Booktitle = {Eighth IEEE International Conference on Data Mining},
	Date-Added = {2012-01-11 09:40:51 +0100},
	Date-Modified = {2014-03-25 08:57:14 -0400},
	Doi = {10.1109/ICDM.2008.99},
	Issn = {1550-4786},
	Keywords = {cloud computers;computing infrastructures;data management;datasets;machine learning algorithms;scalable data mining;data mining;learning (artificial intelligence);},
	Month = dec,
	Pages = {472--481},
	Series = {ICDM '08},
	Title = {Scaling up Classifiers to Cloud Computers},
	Year = {2008},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ICDM.2008.99}}

@article{OzkuralUA11,
	Abstract = {We introduce a transaction database distribution scheme that divides the frequent item set mining task in a top-down fashion. Our method operates on a graph where vertices correspond to frequent items and edges correspond to frequent item sets of size two. We show that partitioning this graph by a vertex separator is sufficient to decide a distribution of the items such that the subdatabases determined by the item distribution can be mined independently. This distribution entails an amount of data replication, which may be reduced by setting appropriate weights to vertices. The data distribution scheme is used in the design of two new parallel frequent item set mining algorithms. Both algorithms replicate the items that correspond to the separator. NoClique replicates the work induced by the separator and NoClique2 computes the same work collectively. Computational load balancing and minimization of redundant or collective work may be achieved by assigning appropriate load estimates to vertices. The experiments show favorable speedups on a system with small-to-medium number of processors for synthetic and real-world databases.},
	Author = {\"{O}zkural, Eray and U\c{c}ar, Bora and Aykanat, Cevdet},
	Date-Added = {2012-01-11 09:38:07 +0100},
	Date-Modified = {2014-03-25 08:57:26 -0400},
	Doi = {10.1109/TPDS.2011.32},
	Issn = {1045-9219},
	Journal = {IEEE Transactions on Parallel and Distributed Systems},
	Keywords = {NoClique;NoClique2;computational load balancing;graph partitioning;parallel frequent item set mining;selective item replication;subdatabases;transaction database distribution scheme;vertex separator;data mining;database management systems;graph theory;resource allocation;},
	Month = oct,
	Number = {10},
	Pages = {1632--1640},
	Title = {Parallel Frequent Item Set Mining with Selective Item Replication},
	Volume = {22},
	Year = {2011},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/TPDS.2011.32}}

@article{JinYA05,
	Abstract = { With recent technological advances, shared memory parallel machines have become more scalable, and offer large main memories and high bus bandwidths. They are emerging as good platforms for data warehousing and data mining. In This work, we focus on shared memory parallelization of data mining algorithms. We have developed a series of techniques for parallelization of data mining algorithms, including full replication, full locking, fixed locking, optimized full locking, and cache-sensitive locking. Unlike previous work on shared memory parallelization of specific data mining algorithms, all of our techniques apply to a large number of popular data mining algorithms. In addition, we propose a reduction-object-based interface for specifying a data mining algorithm. We show how our runtime system can apply any of the techniques we have developed starting from a common specification of the algorithm. We have carried out a detailed evaluation of the parallelization techniques and the programming interface. We have experimented with apriori and fp-tree-based association mining, k-means clustering, k-nearest neighbor classifier, and decision tree construction. The main results from our experiments are as follows: 1) Among full replication, optimized full locking, and cache-sensitive locking, there is no clear winner. Each of these three techniques can outperform others depending upon machine and dataset parameters. These three techniques perform significantly better than the other two techniques. 2) Good parallel efficiency is achieved for each of the four algorithms we experimented with, using our techniques and runtime system. 3) The overhead of the interface is within 10 percent in almost all cases. 4) In the case of decision tree construction, combining different techniques turned out to be crucial for achieving high performance.},
	Author = {Ruoming, Jin and Ge, Yang and Agrawal, Gagan},
	Date-Added = {2012-01-01 12:24:55 +0100},
	Date-Modified = {2014-03-25 08:56:16 -0400},
	Doi = {10.1109/TKDE.2005.18},
	Issn = {1041-4347},
	Journal = {IEEE Trans. on Knowl. and Data Eng.},
	Keywords = {cache-sensitive locking; data mining algorithm; data warehousing; dataset parameter; decision tree construction; fixed locking; fp-tree-based association mining; k-means clustering; k-nearest neighbor classifier; optimized full locking; parallel machines; programming interface; reduction-object-based interface; shared memory parallelization; data mining; data warehouses; decision trees; formal specification; middleware; parallel algorithms; parallel machines; pattern clustering; shared memory systems;},
	Month = jan,
	Number = {1},
	Pages = {71--89},
	Title = {Shared memory parallelization of data mining algorithms: techniques, programming interface, and performance},
	Volume = {17},
	Year = {2005},
	Bdsk-Url-1 = {http://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1363766}}

@inproceedings{BuehrerPTKS07,
	Acmid = {1229432},
	Address = {New York, NY, USA},
	Author = {Buehrer, Gregory and Parthasarathy, Srinivasan and Tatikonda, Shirish and Kurc, Tahsin and Saltz, Joel},
	Booktitle = {Proceedings of the 12th ACM SIGPLAN symposium on Principles and practice of parallel programming},
	Date-Added = {2011-12-30 17:41:50 +0100},
	Date-Modified = {2014-03-25 08:54:59 -0400},
	Doi = {10.1145/1229428.1229432},
	Isbn = {978-1-59593-602-8},
	Keywords = {itemset mining, out of core, parallel},
	Location = {San Jose, California, USA},
	Numpages = {11},
	Pages = {2--12},
	Publisher = {ACM},
	Series = {PPoPP '07},
	Title = {Toward terabyte pattern mining: an architecture-conscious solution},
	Year = {2007},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/1229428.1229432}}

@inproceedings{CongHHP05,
	Acmid = {1065979},
	Address = {New York, NY, USA},
	Author = {Cong, Shengnan and Han, Jiawei and Hoeflinger, Jay and Padua, David},
	Booktitle = {Proceedings of the tenth ACM SIGPLAN symposium on Principles and practice of parallel programming},
	Date-Added = {2011-12-30 17:41:50 +0100},
	Date-Modified = {2014-03-25 08:55:09 -0400},
	Doi = {10.1145/1065944.1065979},
	Isbn = {1-59593-080-9},
	Keywords = {data mining, load balancing, parallel algorithms, sampling},
	Location = {Chicago, IL, USA},
	Numpages = {11},
	Pages = {255--265},
	Publisher = {ACM},
	Series = {PPoPP '05},
	Title = {A sampling-based framework for parallel data mining},
	Year = {2005},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/1065944.1065979}}

@inproceedings{EHZaiane06,
	Abstract = {When computationally feasible, mining extremely large databases produces tremendously large numbers of frequent patterns. In many cases, it is impractical to mine those datasets due to their sheer size; not only the extent of the existing patterns, but mainly the magnitude of the search space. Many approaches have been suggested such as sequential mining for maximal patterns or searching for all frequent patterns in parallel. So far, those approaches are still not genuinely effective to mine extremely large datasets. In this work we propose a method that combines both strategies efficiently, i.e. mining in parallel for the set of maximal patterns which, to the best of our knowledge, has never been proposed efficiently before. Using this approach we could mine significantly large datasets; with sizes never reported in the literature before. We are able to effectively discover frequent patterns in a database made of billion transactions using a 32 processors cluster in less than 2 hours},
	Author = {El-hajj, Mohammad and Za\"{i}ane, Osmar R.},
	Booktitle = {12th International Conference on Parallel and Distributed Systems},
	Date-Added = {2011-12-30 17:41:50 +0100},
	Date-Modified = {2014-03-25 08:55:27 -0400},
	Doi = {10.1109/ICPADS.2006.77},
	Issn = {1521-9097},
	Keywords = {database frequent pattern;database mining;distributed environment;large dataset mining;maximal pattern mining;parallel mining;processor cluster;search space;data mining;parallel processing;pattern clustering;very large databases;},
	Pages = {8 pp.},
	Title = {Parallel leap: large-scale maximal pattern mining in a distributed environment},
	Series = {ICPADS '06}
	Volume = {1},
	Year = {2006},
	Bdsk-Url-1 = {http://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1655657}}

@inproceedings{LiuLZT07,
	Acmid = {1325997},
	Author = {Liu, Li and Li, Eric and Zhang, Yimin and Tang, Zhizhong},
	Booktitle = {Proceedings of the 33rd international conference on Very large data bases},
	Date-Added = {2011-12-30 17:41:50 +0100},
	Date-Modified = {2014-03-25 08:56:24 -0400},
	Isbn = {978-1-59593-649-3},
	Location = {Vienna, Austria},
	Numpages = {11},
	Pages = {1275--1285},
	Publisher = {VLDB Endowment},
	Series = {VLDB '07},
	Title = {Optimization of frequent itemset mining on multiple-core processor},
	Year = {2007},
	Bdsk-Url-1 = {http://dl.acm.org/citation.cfm?id=1325851.1325997}}

@inproceedings{ZaianeEHL01,
	Abstract = {In this paper we introduce a new parallel algorithm MLFPT (multiple local frequent pattern tree) for parallel mining of frequent patterns, based on FP-growth mining, that uses only two full I/O scans of the database, eliminating the need for generating candidate items, and distributing the work fairly among processors. We have devised partitioning strategies at different stages of the mining process to achieve near optimal balancing between processors. We have successfully tested our algorithm on datasets larger than 50 million transactions },
	Author = {Za\"{i}ane, Oosmar R. and El-hajj, Mohammad and Lu, Paul},
	Booktitle = {Proceedings IEEE International Conference on Data Mining},
	Date-Added = {2011-12-30 17:41:50 +0100},
	Date-Modified = {2014-03-25 08:58:04 -0400},
	Doi = {10.1109/ICDM.2001.989600},
	Keywords = {FP-growth mining;I/O scans;MLFPT parallel algorithm;datasets;fast parallel association rule mining;frequent patterns;multiple local frequent pattern tree;optimal processor balancing;partitioning strategies;transactions;data mining;parallel algorithms;resource allocation;very large databases;},
	Pages = {665--668},
	Series = {ICDM '01},
	Title = {Fast parallel association rule mining without candidacy generation},
	Year = {2001},
	Bdsk-Url-1 = {http://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=989600}}

@phdthesis{Cong06,
	Author = {Cong, Shengnan},
	Date-Added = {2011-12-22 17:40:48 +0100},
	Date-Modified = {2011-12-22 17:43:27 +0100},
	School = {University of Illinois at Urbana-Champaign},
	Title = {A Sampling-Based Framework for Parallel Mining Frequent Patterns},
	Year = {2006}}

@techreport{FangEtAl08,
	Author = {Fang, W. and Lau, K. K. and Lu, M. and Xiao, X. and Lam, C. K. and Yang, Y. and He, B. and Luo, Q. and Sander, P. V. and Yang, K.},
	Date-Added = {2011-12-21 16:08:11 +0100},
	Date-Modified = {2011-12-23 09:14:48 +0100},
	Institution = {The Hong Kong University of Science {\&} Technology},
	Number = {07},
	Title = {Parallel Data Mining on Graphics Processors},
	Year = {2008}}

@unpublished{Mahout,
	Author = {{Apache Foundation}},
	Date-Added = {2011-12-21 16:06:37 +0100},
	Date-Modified = {2014-03-14 10:27:32 -0400},
	Note = {\url{http://mahout.apache.org/}},
	Title = {Apache Mahout},
	Year = {{ }},
	Bdsk-Url-1 = {https://mahout.apache.org/}}

@inproceedings{CryansRC10,
	Author = {Cryans, J.-D. and Ratt{\'e}, S. and Champagne, R.},
	Booktitle = {Second International Conference on Advances in Databases Knowledge and Data Applications (DBKDA), 2010},
	Date-Added = {2011-12-21 16:04:59 +0100},
	Date-Modified = {2014-03-25 08:55:18 -0400},
	Doi = {10.1109/DBKDA.2010.34},
	Keywords = {Google;Hadoop;Internet;MapReduce;OpenCalais;RSS feeds;Web pages;Web service;content extraction;named entities;semantic Web;Web services;information retrieval;semantic Web;},
	Month = apr,
	Pages = {185--189},
	Title = {Adaptation of {APriori} to {MapReduce} to Build a Warehouse of Relations between Named Entities across the Web},
	Year = {2010},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/DBKDA.2010.34}}

@inproceedings{ZhouZCLF10,
	Author = {Zhou, Le and Zhong, Zhiyong and Chang, Jin and Li, Junjie and Huang, J.Z. and Feng, Shengzhong},
	Booktitle = {IEEE Youth Conference on Information Computing and Telecommunications (YC-ICT), 2010},
	Date-Added = {2011-12-21 15:45:37 +0100},
	Date-Modified = {2014-03-25 08:58:36 -0400},
	Doi = {10.1109/YCICT.2010.5713090},
	Keywords = {BPFP;FIM algorithms;MapReduce;balanced parallel FP-growth algorithm;frequent itemset mining;data mining;distributed processing;},
	Month = nov,
	Pages = {243--246},
	Title = {Balanced parallel {FP-Growth} with {MapReduce}},
	Year = {2010},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/YCICT.2010.5713090}}

@inproceedings{LiZ11,
	Author = {Li, Lingjuan and Zhang, Min},
	Booktitle = {International Conference on Business Computing and Global Informatization (BCGIN), 2011},
	Date-Added = {2011-12-21 15:44:39 +0100},
	Date-Modified = {2014-03-25 08:56:41 -0400},
	Doi = {10.1109/BCGIn.2011.125},
	Keywords = {Hadoop;MapReduce programming model;cloud computing;data analysis;data mining strategy;data set allocation method;data set division method;data storage;improved Apriori algorithm;parallel association rule mining algorithm;cloud computing;data analysis;data mining;parallel algorithms;},
	Month = jul,
	Pages = {475--478},
	Title = {The Strategy of Mining Association Rule Based on Cloud Computing},
	Year = {2011},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/BCGIn.2011.125}}

@inproceedings{YangLF10,
	Author = {Yang, Xin Yue and Liu, Zhen and Fu, Yan},
	Booktitle = {3rd International Conference on Information Sciences and Interaction Sciences (ICIS), 2010},
	Date-Added = {2011-12-21 15:43:29 +0100},
	Date-Modified = {2014-03-25 08:57:37 -0400},
	Doi = {10.1109/ICICIS.2010.5534718},
	Month = jun,
	Pages = {99--102},
	Title = {{MapReduce} as a programming model for association rules algorithm on {Hadoop}},
	Year = {2010},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ICICIS.2010.5534718}}

@phdthesis{Hammoud11,
	Author = {Hammoud, Suhel},
	Date-Added = {2011-12-21 15:37:07 +0100},
	Date-Modified = {2014-03-25 08:55:54 -0400},
	School = {Brunel University},
	Title = {{MapReduce} Network Enabled Algorithms for Classification Based on Association Rules},
	Year = {2011}}

@inproceedings{GhotingKPK11,
	Acmid = {2020464},
	Address = {New York, NY, USA},
	Author = {Ghoting, Amol and Kambadur, Prabhanjan and Pednault, Edwin and Kannan, Ramakrishnan},
	Booktitle = {Proceedings of the 17th ACM SIGKDD international conference on Knowledge discovery and data mining},
	Date-Added = {2011-12-21 15:33:28 +0100},
	Date-Modified = {2014-03-25 08:55:47 -0400},
	Doi = {10.1145/2020408.2020464},
	Isbn = {978-1-4503-0813-7},
	Keywords = {data mining, machine learning, map/reduce, parallelism},
	Location = {San Diego, California, USA},
	Numpages = {9},
	Pages = {334--342},
	Publisher = {ACM},
	Series = {KDD '11},
	Title = {{NIMBLE}: a toolkit for the implementation of parallel data mining and machine learning algorithms on mapreduce},
	Year = {2011},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/2020408.2020464}}

@inproceedings{LiWZZC08,
	Acmid = {1454027},
	Address = {New York, NY, USA},
	Author = {Li, Haoyuan and Wang, Yi and Zhang, Dong and Zhang, Ming and Chang, Edward Y.},
	Booktitle = {Proceedings of the 2008 ACM conference on Recommender systems},
	Date-Added = {2011-12-21 15:32:45 +0100},
	Date-Modified = {2014-03-25 08:56:34 -0400},
	Doi = {10.1145/1454008.1454027},
	Isbn = {978-1-60558-093-7},
	Keywords = {data mining, frequent itemset mining, parallel fp-growth},
	Location = {Lausanne, Switzerland},
	Numpages = {8},
	Pages = {107--114},
	Publisher = {ACM},
	Series = {RecSys '08},
	Title = {{PFP}: Parallel {FP-G}rowth for query recommendation},
	Year = {2008},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/1454008.1454027}}
